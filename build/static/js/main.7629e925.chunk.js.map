{"version":3,"sources":["Components/Dropdown/Dropdown.js","Components/Modal/Modal.js","Components/Editabled/Editable.js","Components/Card/CardInfo/CardInfo.js","Components/Card/Card.js","Components/Board/Board.js","App.js","index.js"],"names":["Dropdown","props","dropdownRef","useRef","handleClick","event","current","contains","target","onClose","useEffect","document","addEventListener","removeEventListener","ref","className","class","children","Modal","onClick","stopPropagation","Editable","useState","isEditable","setIsEditable","defaultValue","inputText","setInputText","editClass","onSubmit","e","preventDefault","type","value","placeholder","text","onChange","autoFocus","buttonText","displayClass","CardInfo","selectedColor","setSelectedColor","card","values","setValues","calculatePercent","tasks","length","filter","item","completed","updateCard","boardId","id","title","desc","date","min","Date","toISOString","substr","labels","map","index","style","backgroundColor","color","label","tempLabels","removeLabel","findIndex","width","defaultChecked","updateTask","checked","tempTasks","removeTask","task","now","Math","random","Card","showDropdown","setShowDropdown","showModal","setShowModal","draggable","onDragEnd","dragEnded","onDragEnter","dragEntered","removeCard","getDate","getMonth","formatDate","Board","board","cards","removeBoard","addCard","App","JSON","parse","localStorage","getItem","boards","setBoards","bid","cid","targetCard","setTargetCard","addCardHandler","tempBoards","push","cardIndex","splice","s_boardIndex","s_cardIndex","t_boardIndex","t_cardIndex","sourceCard","setItem","stringify","name","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7629e925.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nimport \"./Dropdown.css\";\r\n\r\nfunction Dropdown(props) {\r\n  const dropdownRef = useRef();\r\n\r\n  const handleClick = (event) => {\r\n    if (\r\n      dropdownRef &&\r\n      !dropdownRef.current?.contains(event.target) &&\r\n      props.onClose\r\n    )\r\n      props.onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={dropdownRef}\r\n      className={`dropdown custom-scroll ${props.class ? props.class : \"\"}`}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\n\r\nimport \"./Modal.css\";\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <div\r\n      className=\"modal\"\r\n      onClick={() => (props.onClose ? props.onClose() : \"\")}\r\n    >\r\n      <div\r\n        className=\"modal_content custom-scroll\"\r\n        onClick={(event) => event.stopPropagation()}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { X } from \"react-feather\";\r\n\r\nimport \"./Editable.css\";\r\n\r\nfunction Editable(props) {\r\n  const [isEditable, setIsEditable] = useState(false);\r\n  const [inputText, setInputText] = useState(props.defaultValue || \"\");\r\n\r\n  const submission = (e) => {\r\n    e.preventDefault();\r\n    if (inputText && props.onSubmit) {\r\n      setInputText(\"\");\r\n      props.onSubmit(inputText);\r\n    }\r\n    setIsEditable(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"editable\">\r\n      {isEditable ? (\r\n        <form\r\n          className={`editable_edit ${props.editClass ? props.editClass : \"\"}`}\r\n          onSubmit={submission}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={inputText}\r\n            placeholder={props.placeholder || props.text}\r\n            onChange={(event) => setInputText(event.target.value)}\r\n            autoFocus\r\n          />\r\n          <div className=\"editable_edit_footer\">\r\n            <button type=\"submit\">{props.buttonText || \"Add\"}</button>\r\n            <X onClick={() => setIsEditable(false)} className=\"closeIcon\" />\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <p\r\n          className={`editable_display ${\r\n            props.displayClass ? props.displayClass : \"\"\r\n          }`}\r\n          onClick={() => setIsEditable(true)}\r\n        >\r\n          {props.text}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Calendar,\r\n  CheckSquare,\r\n  List,\r\n  Tag,\r\n  Trash,\r\n  Type,\r\n  X,\r\n} from \"react-feather\";\r\n\r\nimport Modal from \"../../Modal/Modal\";\r\nimport Editable from \"../../Editabled/Editable\";\r\n\r\nimport \"./CardInfo.css\";\r\n\r\nfunction CardInfo(props) {\r\n  const colors = [\r\n    \"#a8193d\",\r\n    \"#4fcc25\",\r\n    \"#1ebffa\",\r\n    \"#8da377\",\r\n    \"#9975bd\",\r\n    \"#cf61a1\",\r\n    \"#240959\",\r\n  ];\r\n\r\n  const [selectedColor, setSelectedColor] = useState();\r\n  const [values, setValues] = useState({\r\n    ...props.card,\r\n  });\r\n\r\n  const updateTitle = (value) => {\r\n    setValues({ ...values, title: value });\r\n  };\r\n\r\n  const updateDesc = (value) => {\r\n    setValues({ ...values, desc: value });\r\n  };\r\n\r\n  const addLabel = (label) => {\r\n    const index = values.labels.findIndex((item) => item.text === label.text);\r\n    if (index > -1) return;\r\n\r\n    setSelectedColor(\"\");\r\n    setValues({\r\n      ...values,\r\n      labels: [...values.labels, label],\r\n    });\r\n  };\r\n\r\n  const removeLabel = (label) => {\r\n    const tempLabels = values.labels.filter((item) => item.text !== label.text);\r\n\r\n    setValues({\r\n      ...values,\r\n      labels: tempLabels,\r\n    });\r\n  };\r\n\r\n  const addTask = (value) => {\r\n    const task = {\r\n      id: Date.now() + Math.random() * 2,\r\n      completed: false,\r\n      text: value,\r\n    };\r\n    setValues({\r\n      ...values,\r\n      tasks: [...values.tasks, task],\r\n    });\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    const tasks = [...values.tasks];\r\n\r\n    const tempTasks = tasks.filter((item) => item.id !== id);\r\n    setValues({\r\n      ...values,\r\n      tasks: tempTasks,\r\n    });\r\n  };\r\n\r\n  const updateTask = (id, value) => {\r\n    const tasks = [...values.tasks];\r\n\r\n    const index = tasks.findIndex((item) => item.id === id);\r\n    if (index < 0) return;\r\n\r\n    tasks[index].completed = value;\r\n\r\n    setValues({\r\n      ...values,\r\n      tasks,\r\n    });\r\n  };\r\n\r\n  const calculatePercent = () => {\r\n    if (!values.tasks?.length) return 0;\r\n    const completed = values.tasks?.filter((item) => item.completed)?.length;\r\n    return (completed / values.tasks?.length) * 100;\r\n  };\r\n\r\n  const updateDate = (date) => {\r\n    if (!date) return;\r\n\r\n    setValues({\r\n      ...values,\r\n      date,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.updateCard) props.updateCard(props.boardId, values.id, values);\r\n  }, [values]);\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      <div className=\"cardinfo\">\r\n        <div className=\"cardinfo_box\">\r\n          <div className=\"cardinfo_box_title\">\r\n            <Type />\r\n            <p>Title</p>\r\n          </div>\r\n          <Editable\r\n            defaultValue={values.title}\r\n            text={values.title}\r\n            placeholder=\"Enter Title\"\r\n            onSubmit={updateTitle}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"cardinfo_box\">\r\n          <div className=\"cardinfo_box_title\">\r\n            <List />\r\n            <p>Description</p>\r\n          </div>\r\n          <Editable\r\n            defaultValue={values.desc}\r\n            text={values.desc || \"Add a Description\"}\r\n            placeholder=\"Enter description\"\r\n            onSubmit={updateDesc}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"cardinfo_box\">\r\n          <div className=\"cardinfo_box_title\">\r\n            <Calendar />\r\n            <p>Date</p>\r\n          </div>\r\n          <input\r\n            type=\"date\"\r\n            defaultValue={values.date}\r\n            min={new Date().toISOString().substr(0, 10)}\r\n            onChange={(event) => updateDate(event.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"cardinfo_box\">\r\n          <div className=\"cardinfo_box_title\">\r\n            <Tag />\r\n            <p>Labels</p>\r\n          </div>\r\n          <div className=\"cardinfo_box_labels\">\r\n            {values.labels?.map((item, index) => (\r\n              <label\r\n                key={index}\r\n                style={{ backgroundColor: item.color, color: \"#fff\" }}\r\n              >\r\n                {item.text}\r\n                <X onClick={() => removeLabel(item)} />\r\n              </label>\r\n            ))}\r\n          </div>\r\n          <ul>\r\n            {colors.map((item, index) => (\r\n              <li\r\n                key={index + item}\r\n                style={{ backgroundColor: item }}\r\n                className={selectedColor === item ? \"li_active\" : \"\"}\r\n                onClick={() => setSelectedColor(item)}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <Editable\r\n            text=\"Add Label\"\r\n            placeholder=\"Enter label text\"\r\n            onSubmit={(value) =>\r\n              addLabel({ color: selectedColor, text: value })\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"cardinfo_box\">\r\n          <div className=\"cardinfo_box_title\">\r\n            <CheckSquare />\r\n            <p>Tasks</p>\r\n          </div>\r\n          <div className=\"cardinfo_box_progress-bar\">\r\n            <div\r\n              className=\"cardinfo_box_progress\"\r\n              style={{\r\n                width: `${calculatePercent()}%`,\r\n                backgroundColor: calculatePercent() === 100 ? \"limegreen\" : \"\",\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"cardinfo_box_task_list\">\r\n            {values.tasks?.map((item) => (\r\n              <div key={item.id} className=\"cardinfo_box_task_checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  defaultChecked={item.completed}\r\n                  onChange={(event) =>\r\n                    updateTask(item.id, event.target.checked)\r\n                  }\r\n                />\r\n                <p className={item.completed ? \"completed\" : \"\"}>{item.text}</p>\r\n                <Trash onClick={() => removeTask(item.id)} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <Editable\r\n            text={\"Add a Task\"}\r\n            placeholder=\"Enter task\"\r\n            onSubmit={addTask}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CardInfo;\r\n","import React, { useState } from \"react\";\r\nimport { CheckSquare, Clock, MoreHorizontal } from \"react-feather\";\r\n\r\nimport Dropdown from \"../Dropdown/Dropdown\";\r\n\r\nimport \"./Card.css\";\r\nimport CardInfo from \"./CardInfo/CardInfo\";\r\n\r\nfunction Card(props) {\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const { id, title, date, tasks, labels } = props.card;\r\n\r\n  const formatDate = (value) => {\r\n    if (!value) return \"\";\r\n    const date = new Date(value);\r\n    if (!date) return \"\";\r\n\r\n    const months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Aprl\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n\r\n    const day = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    return day + \" \" + month;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <CardInfo\r\n          onClose={() => setShowModal(false)}\r\n          card={props.card}\r\n          boardId={props.boardId}\r\n          updateCard={props.updateCard}\r\n        />\r\n      )}\r\n      <div\r\n        className=\"card\"\r\n        draggable\r\n        onDragEnd={() => props.dragEnded(props.boardId, id)}\r\n        onDragEnter={() => props.dragEntered(props.boardId, id)}\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        <div className=\"card_top\">\r\n          <div className=\"card_top_labels\">\r\n            {labels?.map((item, index) => (\r\n              <label key={index} style={{ backgroundColor: item.color }}>\r\n                {item.text}\r\n              </label>\r\n            ))}\r\n          </div>\r\n          <div\r\n            className=\"card_top_more\"\r\n            onClick={(event) => {\r\n              event.stopPropagation();\r\n              setShowDropdown(true);\r\n            }}\r\n          >\r\n            <MoreHorizontal />\r\n            {showDropdown && (\r\n              <Dropdown\r\n                class=\"board_dropdown\"\r\n                onClose={() => setShowDropdown(false)}\r\n              >\r\n                <p onClick={() => props.removeCard(props.boardId, id)}>\r\n                  Delete Card\r\n                </p>\r\n              </Dropdown>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"card_title\">{title}</div>\r\n        <div className=\"card_footer\">\r\n          {date && (\r\n            <p className=\"card_footer_item\">\r\n              <Clock className=\"card_footer_icon\" />\r\n              {formatDate(date)}\r\n            </p>\r\n          )}\r\n          {tasks && tasks?.length > 0 && (\r\n            <p className=\"card_footer_item\">\r\n              <CheckSquare className=\"card_footer_icon\" />\r\n              {tasks?.filter((item) => item.completed)?.length}/{tasks?.length}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport { MoreHorizontal } from \"react-feather\";\r\n\r\nimport Card from \"../Card/Card\";\r\nimport Dropdown from \"../Dropdown/Dropdown\";\r\nimport Editable from \"../Editabled/Editable\";\r\n\r\nimport \"./Board.css\";\r\n\r\nfunction Board(props) {\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <div className=\"board_header\">\r\n        <p className=\"board_header_title\">\r\n          {props.board?.title}\r\n          <span>{props.board?.cards?.length || 0}</span>\r\n        </p>\r\n        <div\r\n          className=\"board_header_title_more\"\r\n          onClick={() => setShowDropdown(true)}\r\n        >\r\n          <MoreHorizontal />\r\n          {showDropdown && (\r\n            <Dropdown\r\n              class=\"board_dropdown\"\r\n              onClose={() => setShowDropdown(false)}\r\n            >\r\n              <p onClick={() => props.removeBoard()}>Delete Board</p>\r\n            </Dropdown>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"board_cards custom-scroll\">\r\n        {props.board?.cards?.map((item) => (\r\n          <Card\r\n            key={item.id}\r\n            card={item}\r\n            boardId={props.board.id}\r\n            removeCard={props.removeCard}\r\n            dragEntered={props.dragEntered}\r\n            dragEnded={props.dragEnded}\r\n            updateCard={props.updateCard}\r\n          />\r\n        ))}\r\n        <Editable\r\n          text=\"+ Add Card\"\r\n          placeholder=\"Enter Card Title\"\r\n          displayClass=\"board_add-card\"\r\n          editClass=\"board_add-card_edit\"\r\n          onSubmit={(value) => props.addCard(props.board?.id, value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Board from \"./Components/Board/Board\";\r\n\r\nimport \"./App.css\";\r\nimport Editable from \"./Components/Editabled/Editable\";\r\n\r\nfunction App() {\r\n  const [boards, setBoards] = useState(\r\n    JSON.parse(localStorage.getItem(\"prac-kanban\")) || []\r\n  );\r\n\r\n  const [targetCard, setTargetCard] = useState({\r\n    bid: \"\",\r\n    cid: \"\",\r\n  });\r\n\r\n  const addboardHandler = (name) => {\r\n    const tempBoards = [...boards];\r\n    tempBoards.push({\r\n      id: Date.now() + Math.random() * 2,\r\n      title: name,\r\n      cards: [],\r\n    });\r\n    setBoards(tempBoards);\r\n  };\r\n\r\n  const removeBoard = (id) => {\r\n    const index = boards.findIndex((item) => item.id === id);\r\n    if (index < 0) return;\r\n\r\n    const tempBoards = [...boards];\r\n    tempBoards.splice(index, 1);\r\n    setBoards(tempBoards);\r\n  };\r\n\r\n  const addCardHandler = (id, title) => {\r\n    const index = boards.findIndex((item) => item.id === id);\r\n    if (index < 0) return;\r\n\r\n    const tempBoards = [...boards];\r\n    tempBoards[index].cards.push({\r\n      id: Date.now() + Math.random() * 2,\r\n      title,\r\n      labels: [],\r\n      date: \"\",\r\n      tasks: [],\r\n    });\r\n    setBoards(tempBoards);\r\n  };\r\n\r\n  const removeCard = (bid, cid) => {\r\n    const index = boards.findIndex((item) => item.id === bid);\r\n    if (index < 0) return;\r\n\r\n    const tempBoards = [...boards];\r\n    const cards = tempBoards[index].cards;\r\n\r\n    const cardIndex = cards.findIndex((item) => item.id === cid);\r\n    if (cardIndex < 0) return;\r\n\r\n    cards.splice(cardIndex, 1);\r\n    setBoards(tempBoards);\r\n  };\r\n\r\n  const dragEnded = (bid, cid) => {\r\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\r\n    s_boardIndex = boards.findIndex((item) => item.id === bid);\r\n    if (s_boardIndex < 0) return;\r\n\r\n    s_cardIndex = boards[s_boardIndex]?.cards?.findIndex(\r\n      (item) => item.id === cid\r\n    );\r\n    if (s_cardIndex < 0) return;\r\n\r\n    t_boardIndex = boards.findIndex((item) => item.id === targetCard.bid);\r\n    if (t_boardIndex < 0) return;\r\n\r\n    t_cardIndex = boards[t_boardIndex]?.cards?.findIndex(\r\n      (item) => item.id === targetCard.cid\r\n    );\r\n    if (t_cardIndex < 0) return;\r\n\r\n    const tempBoards = [...boards];\r\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\r\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\r\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\r\n    setBoards(tempBoards);\r\n\r\n    setTargetCard({\r\n      bid: \"\",\r\n      cid: \"\",\r\n    });\r\n  };\r\n\r\n  const dragEntered = (bid, cid) => {\r\n    if (targetCard.cid === cid) return;\r\n    setTargetCard({\r\n      bid,\r\n      cid,\r\n    });\r\n  };\r\n\r\n  const updateCard = (bid, cid, card) => {\r\n    const index = boards.findIndex((item) => item.id === bid);\r\n    if (index < 0) return;\r\n\r\n    const tempBoards = [...boards];\r\n    const cards = tempBoards[index].cards;\r\n\r\n    const cardIndex = cards.findIndex((item) => item.id === cid);\r\n    if (cardIndex < 0) return;\r\n\r\n    tempBoards[index].cards[cardIndex] = card;\r\n\r\n    setBoards(tempBoards);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\r\n  }, [boards]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app_nav\">\r\n        <h1>Kanban</h1>\r\n      </div>\r\n      <div className=\"app_boards_container\">\r\n        <div className=\"app_boards\">\r\n          {boards.map((item) => (\r\n            <Board\r\n              key={item.id}\r\n              board={item}\r\n              addCard={addCardHandler}\r\n              removeBoard={() => removeBoard(item.id)}\r\n              removeCard={removeCard}\r\n              dragEnded={dragEnded}\r\n              dragEntered={dragEntered}\r\n              updateCard={updateCard}\r\n            />\r\n          ))}\r\n          <div className=\"app_boards_last\">\r\n            <Editable\r\n              displayClass=\"app_boards_add-board\"\r\n              editClass=\"app_boards_add-board_edit\"\r\n              placeholder=\"Enter Board Name\"\r\n              text=\"Add Board\"\r\n              buttonText=\"Add Board\"\r\n              onSubmit={addboardHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}